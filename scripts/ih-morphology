#!python
import argparse
import traceback
import ih.imgproc

parser = argparse.ArgumentParser(description = "Converts an image between color spectrums.")
parser.add_argument("--input", dest="input", help="Path to input image.", required = True)
parser.add_argument("--morphType", dest="morphType", help="Type of morphology to perform.", required = True)
parser.add_argument("--ktype", dest="ktype", help="Type of kernel to generate.", required = True)
parser.add_argument("--kwidth", dest="kwidth", type=int, help="Width of the kernel.", required = True)
parser.add_argument("--kheight", dest="kheight", type=int, help="Height of the kernel.", required = True)
parser.add_argument("--anchorx", default=-1, dest="anchorx", type=int, help="X position of the anchor")
parser.add_argument("--anchory", default=-1, dest="anchory", type=int, help="Y position of the anchor")
parser.add_argument("--iterations", default=1, dest="iterations", type=int, help="Number of times to perform the morphology.")
parser.add_argument("--border", default="default", dest="border", help="Border type for extrapolation.")
parser.add_argument("--outputdir", dest="outputdir", default=".", help="Path to write output files, if not specified use current directory.")
parser.add_argument("--output", default=None, dest="output", help="Name of output image to write, if not specified, use input image name.")
parser.add_argument("--writeblank", default=False, action="store_true", help="If errors happen, write a blank file.  Used to ensure dependent files exist for pegasus workflows.")
args = parser.parse_args()

try:
    plant = ih.imgproc.Image(args.input, args.outputdir, args.output, False)
    plant.morphology(args.morphType, args.ktype, (args.kwidth, args.kheight), (args.anchorx, args.anchory), args.iterations, args.border)
    plant.write()
except Exception as e:
    print traceback.format_exc()
    if args.writeblank:
      with open(args.outputdir + "/" + args.output, "w") as wh:
        wh.write("not an image.")
