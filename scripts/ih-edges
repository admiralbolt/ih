#!python
import argparse
import traceback
import ih.imgproc

parser = argparse.ArgumentParser(description = "Smoothes an image based on a evenly distributed kernel.")
parser.add_argument("--input", dest="input", help="Path to input image.", required = True)
parser.add_argument("--threshold1", dest="threshold1", type=int, help="Minimum threshold value.", required = True)
parser.add_argument("--threshold2", dest="threshold2", type=int, help="Maximum threshold value.", required = True)
parser.add_argument("--apertureSize", default = 3, dest="apertureSize", type=int, help="Aperture size for Sobel algorithm.")
parser.add_argument("--L2gradient", default = False, dest="L2gradient", action="store_true", help="Determines method to calculate gradient magnitutde.")
parser.add_argument("--outputdir", dest="outputdir", default=".", help="Path to write output files, if not specified use current directory.")
parser.add_argument("--output", default=None, dest="output", help="Name of output image to write, if not specified, use input image name.")
parser.add_argument("--writeblank", default=False, action="store_true", help="If errors happen, write a blank file.  Used to ensure dependent files exist for pegasus workflows.")
args = parser.parse_args()

try:
    plant = ih.imgproc.Image(args.input, args.outputdir, args.output, False)
    plant.edges(args.threshold1, args.threshold2, args.apertureSize, args.L2gradient)
    plant.write()
except Exception as e:
    print traceback.format_exc()
    if args.writeblank:
      with open(args.outputdir + "/" + args.output, "w") as wh:
        wh.write("not an image.")
