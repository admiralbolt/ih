#!python
import argparse
import traceback
import ih.imgproc

parser = argparse.ArgumentParser(description = "Smoothes an image based on a evenly distributed kernel.")
parser.add_argument("--input", dest="input", help="Path to input image.", required = True)
parser.add_argument("--logic", dest="logic", help="Logic string to compute.", required = True)
parser.add_argument("--roi", dest="roi", help="roi file")
parser.add_argument("--ystart", dest="ystart", default=-1, help="Minimum Y of the roi.")
parser.add_argument("--yend", dest="yend", default=-1, help="Maximum Y of the roi.")
parser.add_argument("--xstart", dest="xstart", default=-1, help="Minimum X of the roi.")
parser.add_argument("--xend", dest="xend", default=-1, help="Maximum X of the roi.")
parser.add_argument("--outputdir", dest="outputdir", default=".", help="Path to write output files, if not specified use current directory.")
parser.add_argument("--output", default=None, dest="output", help="Name of output image to write, if not specified, use input image name.")
parser.add_argument("--writeblank", default=False, action="store_true", help="If errors happen, write a blank file.  Used to ensure dependent files exist for pegasus workflows.")
args = parser.parse_args()

try:
    plant = ih.imgproc.Image(args.input, args.outputdir, args.output, False)
    if args.roi:
        plant.colorFilter(args.logic, args.roi)
    else:
        plant.colorFilter(args.logic, [args.ystart, args.yend, args.xstart, args.xend])
    plant.write()
except Exception as e:
    print traceback.format_exc()
    if args.writeblank:
      with open(args.outputdir + "/" + args.output, "w") as wh:
        wh.write("not an image.")
